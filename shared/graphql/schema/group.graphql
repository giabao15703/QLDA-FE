query getGroupQldas($before: String, $after: String, $first: Int, $last: Int, $name: String, $status: Boolean) {
    groupQldas(before: $before, after: $after, first: $first, last: $last, name: $name, status: $status) {
        totalCount
        pageInfo {
            ...PageInfo
        }
        edges {
            node {
                ...GroupQLDAInfo
            }
        }
    }
}


query getGroupQldaRequests(
    $before: String
    $after: String
    $first: Int
    $last: Int
    $userId: Float
    $groupId: Float
    $isApproved: Boolean
) {
    joinRequests(
        before: $before
        after: $after
        first: $first
        last: $last
        userId: $userId
        groupId: $groupId
        isApproved: $isApproved
    ) {
        totalCount
        pageInfo {
            ...PageInfo
        }
        edges {
            node {
                id
                user {
                    id
                }
                group {
                    id
                    creatorShortName
                }
                leaderUserId
            }
        }
    }
}

query getJoinGroups(
    $before: String
    $after: String
    $first: Int
    $last: Int
    $userId: Float
    $groupId: Float
    $role: String
) {
    joinGroups(
        before: $before
        after: $after
        first: $first
        last: $last
        userId: $userId
        groupId: $groupId
        role: $role
    ) {
        edges {
            node {
                ...JoinGroupInfo
            }
        }
    }
}

query getGroupQlda($id: ID!) {
    groupQlda(id: $id) {
        ...GroupQLDAInfo
    }
}

mutation getGroupQldaJoin($groupId: ID!) {
    groupQldaJoin(groupId: $groupId) {
        status
        error {
            code
            message
        }
    }
}
mutation acceptJoinRequest($joinRequestId: ID!) {
    acceptJoinRequest(joinRequestId: $joinRequestId) {
        status
        error {
            code
            message
        }
    }
}


mutation createGroupQlda($input: GroupQLDAInput!) {
    groupQldaCreate(input: $input) {
        status
        groupQlda {
            ...GroupQLDAInfo
        }
        error {
            ...ErrorInfo
        }
    }
}
